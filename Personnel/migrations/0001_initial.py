# Generated by Django 4.0.4 on 2022-05-31 18:36

import Personnel.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailSendModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_to', models.EmailField(max_length=255)),
                ('specialite', models.CharField(max_length=200)),
                ('matricule', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='OffreLicence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('specialite', models.CharField(choices=[('Informatique', 'Informatique'), ('SCIENCES HUMAINES', 'SCIENCES HUMAINES'), ('SCIENCES SOCIALES', 'SCIENCES SOCIALES'), ('SCIENCES ECONOMIQUES', 'SCIENCES ECONOMIQUES')], default='Informatique', max_length=200)),
                ('fichier', models.FileField(blank=True, upload_to='fileOffreLicence', validators=[Personnel.models.validate_file_extension])),
            ],
        ),
        migrations.CreateModel(
            name='OffreMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('specialite', models.CharField(choices=[('Informatique', 'Informatique'), ('SCIENCES HUMAINES', 'SCIENCES HUMAINES'), ('SCIENCES SOCIALES', 'SCIENCES SOCIALES'), ('SCIENCES ECONOMIQUES', 'SCIENCES ECONOMIQUES')], default='Informatique', max_length=200)),
                ('fichier', models.FileField(blank=True, upload_to='fileOffreMaster', validators=[Personnel.models.validate_file_extension])),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.  Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether this user has completed the email verification process to allow login.', verbose_name='verified')),
                ('is_etudiant', models.BooleanField(default=True)),
                ('is_personnel', models.BooleanField(default=False)),
                ('specialite', models.CharField(choices=[('Informatique', 'Informatique'), ('SCIENCES HUMAINES', 'SCIENCES HUMAINES'), ('SCIENCES SOCIALES', 'SCIENCES SOCIALES'), ('SCIENCES ECONOMIQUES', 'SCIENCES ECONOMIQUES')], default='Informatique', max_length=200)),
                ('department', models.CharField(default='NTIC', max_length=10)),
                ('filier', models.CharField(default='', max_length=10)),
                ('matricule', models.IntegerField(default=0, unique=True)),
                ('annee', models.CharField(default='', max_length=10)),
                ('moyenne_s1', models.FloatField(default=None, null=True)),
                ('moyenne_s2', models.FloatField(default=None, null=True)),
                ('moyenne_s3', models.FloatField(default=None, null=True)),
                ('moyenne_s4', models.FloatField(default=None, null=True)),
                ('moyenne_s5', models.FloatField(default=None, null=True)),
                ('moyenne_s6', models.FloatField(default=None, null=True)),
                ('classment', models.FloatField(default=None, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VerifiedUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('Personnel.users',),
        ),
    ]
